{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA8BeA,MA3Bf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAgBtC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCEZG,MATf,YAAsC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC5B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIHG,MAAMR,GAJH,cAIfS,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXjB,kBAedY,GAfc,4CAAH,sDCuBLM,MApBf,YAAgC,IAAbb,EAAY,EAAZA,SAAY,ECAH,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDd2BK,CAAapB,GAAjCW,EADe,EACrBL,KAAcQ,EADO,EACPA,QAEtB,OACE,qCACE,oBAAIlB,UAAU,oCAAd,SAAmDI,IAElDc,GACC,mBAAGlB,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOjBW,MAlBf,WAAwB,MAEczC,mBAAS,CAAC,cAFxB,mBAEf0C,EAFe,KAEH3C,EAFG,KAItB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEC2C,EAAWd,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,UCTtBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.82251bbb.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","function GifGridItem({ title, url }) {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=CYsgtpw68h7KlPgppOYkyHrOUYG5WR9V`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\nfunction GifGrid({ category }) {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <hr />\r\n\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'animate.css';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}